{
  "address": "0x0F9dFedC45453ed954A9e3891e29C8f4967D8916",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_by",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "_vestingScheduleId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_by",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "_vestingScheduleId",
          "type": "bytes32"
        }
      ],
      "name": "Revoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_by",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_oldVal",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_newVal",
          "type": "address"
        }
      ],
      "name": "TreasuryUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_by",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "_vestingScheduleId",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revoked",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "cliff",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "start",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "duration",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "slicePeriodSeconds",
              "type": "uint32"
            },
            {
              "internalType": "uint128",
              "name": "amountTotal",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "immediatelyReleasableAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "released",
              "type": "uint128"
            }
          ],
          "indexed": false,
          "internalType": "struct TokenVestingV2.VestingSchedule",
          "name": "_schedule",
          "type": "tuple"
        }
      ],
      "name": "VestingScheduleCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "computeNextVestingScheduleIdForHolder",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingScheduleId",
          "type": "bytes32"
        }
      ],
      "name": "computeReleasableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "computeVestingScheduleIdForAddressAndIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_start",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_cliff",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_duration",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_slicePeriodSeconds",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "_revocable",
          "type": "bool"
        },
        {
          "internalType": "uint128",
          "name": "_amount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_immediatelyReleasableAmount",
          "type": "uint128"
        }
      ],
      "name": "createVestingSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "getLastVestingScheduleForHolder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revoked",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "cliff",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "start",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "duration",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "slicePeriodSeconds",
              "type": "uint32"
            },
            {
              "internalType": "uint128",
              "name": "amountTotal",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "immediatelyReleasableAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "released",
              "type": "uint128"
            }
          ],
          "internalType": "struct TokenVestingV2.VestingSchedule",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTreasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getVestingIdAtIndex",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingScheduleId",
          "type": "bytes32"
        }
      ],
      "name": "getVestingSchedule",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revoked",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "cliff",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "start",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "duration",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "slicePeriodSeconds",
              "type": "uint32"
            },
            {
              "internalType": "uint128",
              "name": "amountTotal",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "immediatelyReleasableAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "released",
              "type": "uint128"
            }
          ],
          "internalType": "struct TokenVestingV2.VestingSchedule",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getVestingScheduleByAddressAndIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revoked",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "cliff",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "start",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "duration",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "slicePeriodSeconds",
              "type": "uint32"
            },
            {
              "internalType": "uint128",
              "name": "amountTotal",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "immediatelyReleasableAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "released",
              "type": "uint128"
            }
          ],
          "internalType": "struct TokenVestingV2.VestingSchedule",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVestingSchedulesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "getVestingSchedulesCountByBeneficiary",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVestingSchedulesTotalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "treasury_",
          "type": "address"
        }
      ],
      "name": "postConstruct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingScheduleId",
          "type": "bytes32"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "vestingScheduleId",
          "type": "bytes32"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "treasury_",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf256cc219700029de2b45395980e254e665474746e90265b80fd1eebeae39768",
  "receipt": {
    "to": null,
    "from": "0x5F185Da55f7BBD9217E3b3CeE06b180721FA6d34",
    "contractAddress": "0x0F9dFedC45453ed954A9e3891e29C8f4967D8916",
    "transactionIndex": 43,
    "gasUsed": "2210007",
    "logsBloom": "0x
    "blockHash": "0x79f105999d21a155ba3c9f52a98f26e53d2af444c56cdb92076a979d6a1e7fce",
    "transactionHash": "0xf256cc219700029de2b45395980e254e665474746e90265b80fd1eebeae39768",
    "logs": [],
    "blockNumber": 10502834,
    "cumulativeGasUsed": "5346631",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "15b27415b119a456b460f622dd630a45",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_vestingScheduleId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_vestingScheduleId\",\"type\":\"bytes32\"}],\"name\":\"Revoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldVal\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newVal\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_vestingScheduleId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"cliff\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"slicePeriodSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"amountTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"immediatelyReleasableAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"released\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct TokenVestingV2.VestingSchedule\",\"name\":\"_schedule\",\"type\":\"tuple\"}],\"name\":\"VestingScheduleCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"computeNextVestingScheduleIdForHolder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingScheduleId\",\"type\":\"bytes32\"}],\"name\":\"computeReleasableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"computeVestingScheduleIdForAddressAndIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_cliff\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_duration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_slicePeriodSeconds\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"_revocable\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_immediatelyReleasableAmount\",\"type\":\"uint128\"}],\"name\":\"createVestingSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"getLastVestingScheduleForHolder\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"cliff\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"slicePeriodSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"amountTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"immediatelyReleasableAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"released\",\"type\":\"uint128\"}],\"internalType\":\"struct TokenVestingV2.VestingSchedule\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getVestingIdAtIndex\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingScheduleId\",\"type\":\"bytes32\"}],\"name\":\"getVestingSchedule\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"cliff\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"slicePeriodSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"amountTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"immediatelyReleasableAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"released\",\"type\":\"uint128\"}],\"internalType\":\"struct TokenVestingV2.VestingSchedule\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getVestingScheduleByAddressAndIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"cliff\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"slicePeriodSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"amountTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"immediatelyReleasableAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"released\",\"type\":\"uint128\"}],\"internalType\":\"struct TokenVestingV2.VestingSchedule\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVestingSchedulesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"getVestingSchedulesCountByBeneficiary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVestingSchedulesTotalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasury_\",\"type\":\"address\"}],\"name\":\"postConstruct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingScheduleId\",\"type\":\"bytes32\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vestingScheduleId\",\"type\":\"bytes32\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"treasury_\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"computeNextVestingScheduleIdForHolder(address)\":{\"details\":\"Computes the next vesting schedule identifier for a given holder address.\"},\"computeReleasableAmount(bytes32)\":{\"returns\":{\"_0\":\"the vested amount\"}},\"computeVestingScheduleIdForAddressAndIndex(address,uint256)\":{\"details\":\"Computes the vesting schedule identifier for an address and an index.\"},\"createVestingSchedule(address,uint32,uint32,uint32,uint32,bool,uint128,uint128)\":{\"params\":{\"_amount\":\"total amount of tokens to be released at the end of the vesting\",\"_beneficiary\":\"address of the beneficiary to whom vested tokens are transferred\",\"_cliff\":\"duration in seconds of the cliff in which tokens will begin to vest\",\"_duration\":\"duration in seconds of the period in which the tokens will vest\",\"_immediatelyReleasableAmount\":\"total amount of tokens to be released at the beginning of the vesting\",\"_revocable\":\"whether the vesting is revocable or not\",\"_slicePeriodSeconds\":\"duration of a slice period for the vesting in seconds\",\"_start\":\"start time of the vesting period\"}},\"getLastVestingScheduleForHolder(address)\":{\"details\":\"Returns the last vesting schedule for a given holder address.\"},\"getToken()\":{\"details\":\"Returns the address of the ERC20 token managed by the vesting contract.\"},\"getTreasury()\":{\"details\":\"Returns the address of the wallet smart contract uses to fund vesting.\"},\"getVestingIdAtIndex(uint256)\":{\"details\":\"Returns the vesting schedule id at the given index.\",\"returns\":{\"_0\":\"the vesting id\"}},\"getVestingSchedule(bytes32)\":{\"returns\":{\"_0\":\"the vesting schedule structure information\"}},\"getVestingScheduleByAddressAndIndex(address,uint256)\":{\"returns\":{\"_0\":\"the vesting schedule structure information\"}},\"getVestingSchedulesCount()\":{\"details\":\"Returns the number of vesting schedules managed by this contract.\",\"returns\":{\"_0\":\"the number of vesting schedules\"}},\"getVestingSchedulesCountByBeneficiary(address)\":{\"details\":\"Returns the number of vesting schedules associated to a beneficiary.\",\"returns\":{\"_0\":\"the number of vesting schedules\"}},\"getVestingSchedulesTotalAmount()\":{\"returns\":{\"_0\":\"the total amount of vesting schedules\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postConstruct(address,address)\":{\"details\":\"UUPS initializer, initializes a vesting contract\",\"params\":{\"token_\":\"address of the ERC20 token contract, non-zero, immutable\",\"treasury_\":\"address of the wallet funding vesting contract, mutable\"}},\"release(bytes32,uint128)\":{\"params\":{\"amount\":\"the amount to release\",\"vestingScheduleId\":\"the vesting schedule identifier\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revoke(bytes32)\":{\"params\":{\"vestingScheduleId\":\"the vesting schedule identifier\"}},\"setTreasury(address)\":{\"details\":\"Updates the wallet address used by the smart contract to fund vesting.\",\"params\":{\"treasury_\":\"wallet address to set to fund vesting\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"TokenVesting\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computeReleasableAmount(bytes32)\":{\"notice\":\"Computes the vested amount of tokens for the given vesting schedule identifier.\"},\"createVestingSchedule(address,uint32,uint32,uint32,uint32,bool,uint128,uint128)\":{\"notice\":\"Creates a new vesting schedule for a beneficiary.\"},\"getVestingSchedule(bytes32)\":{\"notice\":\"Returns the vesting schedule information for a given identifier.\"},\"getVestingScheduleByAddressAndIndex(address,uint256)\":{\"notice\":\"Returns the vesting schedule information for a given holder and index.\"},\"getVestingSchedulesTotalAmount()\":{\"notice\":\"Returns the total amount of vesting schedules.\"},\"release(bytes32,uint128)\":{\"notice\":\"Release vested amount of tokens.\"},\"revoke(bytes32)\":{\"notice\":\"Revokes the vesting schedule for given identifier.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenVestingV2.sol\":\"TokenVestingV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9ffedb33e192f8821cbaead72596c79ea87fb28a73f8d3a9f5004449799f8e1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n        __ERC1967Upgrade_init_unchained();\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            _functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallSecure(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        address oldImplementation = _getImplementation();\\n\\n        // Initial upgrade and setup call\\n        _setImplementation(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            _functionDelegateCall(newImplementation, data);\\n        }\\n\\n        // Perform rollback test if not already in progress\\n        StorageSlotUpgradeable.BooleanSlot storage rollbackTesting = StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT);\\n        if (!rollbackTesting.value) {\\n            // Trigger rollback using upgradeTo from the new implementation\\n            rollbackTesting.value = true;\\n            _functionDelegateCall(\\n                newImplementation,\\n                abi.encodeWithSignature(\\\"upgradeTo(address)\\\", oldImplementation)\\n            );\\n            rollbackTesting.value = false;\\n            // Check rollback was effective\\n            require(oldImplementation == _getImplementation(), \\\"ERC1967Upgrade: upgrade breaks further upgrades\\\");\\n            // Finally reset to the new implementation and log the upgrade\\n            _upgradeTo(newImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            _functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {\\n        require(AddressUpgradeable.isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return AddressUpgradeable.verifyCallResult(success, returndata, \\\"Address: low-level delegate call failed\\\");\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xba3e051005a0b7f77c465dbcfe6366ce6a72e3845028277e1f794e5e8864e017\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x68861bcc80cacbd498efde75aab6c74a486cc48262660d326c8d7530d9752097\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n        __ERC1967Upgrade_init_unchained();\\n        __UUPSUpgradeable_init_unchained();\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function upgradeTo(address newImplementation) external virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallSecure(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallSecure(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xed65883d4af8d00c76ff9f1b7758c5d8ac4ab82da60f9743c74d31b754b06bc0\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xf3a9b766b0d0456f79d9402db4b49bb16c414f3f9d65244475c0704b6c66dcf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f0f878c796dfc7feba6d3c4e3e526c14c7deae8b7bfc71088e3f38fab0d77b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x0b0d548f6381370d394f7a434f994dc678b3ef3e755de106109d61343a685ea7\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x422c3d27d0d5681cea93acbb0dcb175fa5b461b5b7731da7ff77e51f0f0174c7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a / b + (a % b == 0 ? 0 : 1);\\n    }\\n}\\n\",\"keccak256\":\"0xfaad496c1c944b6259b7dc70b4865eb1775d6402bc0c81b38a0b24d9f525ae37\",\"license\":\"MIT\"},\"contracts/TokenVestingV2.sol\":{\"content\":\"// contracts/TokenVesting.sol\\n// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.11;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\n\\n/**\\n * @title TokenVesting\\n */\\ncontract TokenVestingV2 is UUPSUpgradeable, OwnableUpgradeable, ReentrancyGuardUpgradeable {\\n\\tusing SafeERC20 for IERC20;\\n\\tstruct VestingSchedule {\\n\\t\\t// set to true when schedule is created\\n\\t\\tbool initialized;\\n\\t\\t// whether or not the vesting is revocable\\n\\t\\tbool revocable;\\n\\t\\t// whether or not the vesting has been revoked\\n\\t\\tbool revoked;\\n\\t\\t// beneficiary of tokens after they are released\\n\\t\\taddress beneficiary;\\n\\t\\t// cliff time as unix timestamp\\n\\t\\tuint32 cliff;\\n\\t\\t// start time of the vesting period\\n\\t\\tuint32 start;\\n\\t\\t// duration of the vesting period in seconds\\n\\t\\tuint32 duration;\\n\\t\\t// duration of a slice period for the vesting in seconds\\n\\t\\tuint32 slicePeriodSeconds;\\n\\t\\t// total amount of tokens to be released at the end of the vesting\\n\\t\\tuint128 amountTotal;\\n\\t\\t// total amount of tokens to be released at the beginning of the vesting\\n\\t\\tuint128 immediatelyReleasableAmount;\\n\\t\\t// amount of tokens released\\n\\t\\tuint128 released;\\n\\t}\\n\\n\\t// address of the ERC20 token\\n\\taddress internal _token;\\n\\taddress internal _treasury;\\n\\n\\tbytes32[] internal vestingSchedulesIds;\\n\\tmapping(bytes32 => VestingSchedule) internal vestingSchedules;\\n\\tuint256 internal vestingSchedulesTotalAmount;\\n\\tmapping(address => uint256) internal holdersVestingCount;\\n\\n\\t// events\\n\\tevent VestingScheduleCreated(address indexed _by, address indexed _beneficiary, bytes32 indexed _vestingScheduleId, VestingSchedule _schedule);\\n\\tevent Released(address indexed _by, address indexed _to, bytes32 indexed _vestingScheduleId, uint256 _amount);\\n\\tevent Revoked(address indexed _by, address indexed _beneficiary, bytes32 indexed _vestingScheduleId);\\n\\tevent TreasuryUpdated(address indexed _by, address indexed _oldVal, address indexed _newVal);\\n\\n\\t/**\\n\\t* @dev Reverts if no vesting schedule matches the passed identifier.\\n\\t*/\\n\\tmodifier onlyIfVestingScheduleExists(bytes32 vestingScheduleId) {\\n\\t\\trequire(vestingSchedules[vestingScheduleId].initialized == true);\\n\\t\\t_;\\n\\t}\\n\\n\\t/**\\n\\t * @dev Reverts if the vesting schedule does not exist or has been revoked.\\n\\t */\\n\\tmodifier onlyIfVestingScheduleNotRevoked(bytes32 vestingScheduleId) {\\n\\t\\trequire(vestingSchedules[vestingScheduleId].initialized == true);\\n\\t\\trequire(vestingSchedules[vestingScheduleId].revoked == false);\\n\\t\\t_;\\n\\t}\\n\\n\\t/**\\n\\t * @dev UUPS initializer, initializes a vesting contract\\n\\t *\\n\\t * @param token_ address of the ERC20 token contract, non-zero, immutable\\n\\t * @param treasury_ address of the wallet funding vesting contract, mutable\\n\\t */\\n\\tfunction postConstruct(address token_, address treasury_) public virtual initializer {\\n\\t\\trequire(token_ != address(0x0));\\n\\t\\t// note we don't verify treasury is not zero and allow it to be set up later\\n\\t\\t_token = token_;\\n\\t\\t_treasury = treasury_;\\n\\n\\t\\t__Ownable_init();\\n\\t\\t__ReentrancyGuard_init();\\n\\t}\\n\\n\\t// receive() external payable {}\\n\\n\\t// fallback() external payable {}\\n\\n\\t/**\\n\\t * @dev Returns the number of vesting schedules associated to a beneficiary.\\n\\t * @return the number of vesting schedules\\n\\t */\\n\\tfunction getVestingSchedulesCountByBeneficiary(address _beneficiary) public view virtual returns (uint256) {\\n\\t\\treturn holdersVestingCount[_beneficiary];\\n\\t}\\n\\n\\t/**\\n\\t * @dev Returns the vesting schedule id at the given index.\\n\\t * @return the vesting id\\n\\t */\\n\\tfunction getVestingIdAtIndex(uint256 index) public view virtual returns (bytes32) {\\n\\t\\trequire(index < getVestingSchedulesCount(), \\\"TokenVesting: index out of bounds\\\");\\n\\t\\treturn vestingSchedulesIds[index];\\n\\t}\\n\\n\\t/**\\n\\t * @notice Returns the vesting schedule information for a given holder and index.\\n\\t * @return the vesting schedule structure information\\n\\t */\\n\\tfunction getVestingScheduleByAddressAndIndex(\\n\\t\\taddress holder,\\n\\t\\tuint256 index\\n\\t) public view virtual returns (VestingSchedule memory) {\\n\\t\\treturn getVestingSchedule(computeVestingScheduleIdForAddressAndIndex(holder, index));\\n\\t}\\n\\n\\n\\t/**\\n\\t * @notice Returns the total amount of vesting schedules.\\n\\t * @return the total amount of vesting schedules\\n\\t */\\n\\tfunction getVestingSchedulesTotalAmount() external view virtual returns (uint256) {\\n\\t\\treturn vestingSchedulesTotalAmount;\\n\\t}\\n\\n\\t/**\\n\\t * @dev Returns the address of the ERC20 token managed by the vesting contract.\\n\\t */\\n\\tfunction getToken() public view virtual returns (address) {\\n\\t\\treturn address(_token);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Returns the address of the wallet smart contract uses to fund vesting.\\n\\t */\\n\\tfunction getTreasury() public view virtual returns (address) {\\n\\t\\treturn _treasury;\\n\\t}\\n\\n\\t/**\\n\\t * @dev Updates the wallet address used by the smart contract to fund vesting.\\n\\t * @param treasury_ wallet address to set to fund vesting\\n\\t */\\n\\tfunction setTreasury(address treasury_) public virtual onlyOwner {\\n\\t\\temit TreasuryUpdated(msg.sender, _treasury, treasury_);\\n\\t\\t_treasury = treasury_;\\n\\t}\\n\\n\\t/**\\n\\t * @notice Creates a new vesting schedule for a beneficiary.\\n\\t * @param _beneficiary address of the beneficiary to whom vested tokens are transferred\\n\\t * @param _start start time of the vesting period\\n\\t * @param _cliff duration in seconds of the cliff in which tokens will begin to vest\\n\\t * @param _duration duration in seconds of the period in which the tokens will vest\\n\\t * @param _slicePeriodSeconds duration of a slice period for the vesting in seconds\\n\\t * @param _revocable whether the vesting is revocable or not\\n\\t * @param _amount total amount of tokens to be released at the end of the vesting\\n\\t * @param _immediatelyReleasableAmount total amount of tokens to be released at the beginning of the vesting\\n\\t */\\n\\tfunction createVestingSchedule(\\n\\t\\taddress _beneficiary,\\n\\t\\tuint32 _start,\\n\\t\\tuint32 _cliff,\\n\\t\\tuint32 _duration,\\n\\t\\tuint32 _slicePeriodSeconds,\\n\\t\\tbool _revocable,\\n\\t\\tuint128 _amount,\\n\\t\\tuint128 _immediatelyReleasableAmount\\n\\t) public virtual onlyOwner {\\n\\t\\trequire(_duration > 0, \\\"TokenVesting: duration must be > 0\\\");\\n\\t\\trequire(_amount > 0, \\\"TokenVesting: amount must be > 0\\\");\\n\\t\\trequire(_immediatelyReleasableAmount <= _amount, \\\"TokenVesting: immediatelyReleasableAmount must be <= amount\\\");\\n\\t\\trequire(_slicePeriodSeconds >= 1, \\\"TokenVesting: slicePeriodSeconds must be >= 1\\\");\\n\\t\\tbytes32 vestingScheduleId = this.computeNextVestingScheduleIdForHolder(_beneficiary);\\n\\t\\tuint32 cliff = _start + _cliff;\\n\\t\\tvestingSchedules[vestingScheduleId] = VestingSchedule(\\n\\t\\t\\ttrue,\\n\\t\\t\\t_revocable,\\n\\t\\t\\tfalse,\\n\\t\\t\\t_beneficiary,\\n\\t\\t\\tcliff,\\n\\t\\t\\t_start,\\n\\t\\t\\t_duration,\\n\\t\\t\\t_slicePeriodSeconds,\\n\\t\\t\\t_amount,\\n\\t\\t\\t_immediatelyReleasableAmount,\\n\\t\\t\\t0\\n\\t\\t);\\n\\t\\tvestingSchedulesTotalAmount = vestingSchedulesTotalAmount + _amount;\\n\\t\\tvestingSchedulesIds.push(vestingScheduleId);\\n\\t\\tuint256 currentVestingCount = holdersVestingCount[_beneficiary];\\n\\t\\tholdersVestingCount[_beneficiary] = currentVestingCount + 1;\\n\\n\\t\\temit VestingScheduleCreated(msg.sender, _beneficiary, vestingScheduleId, vestingSchedules[vestingScheduleId]);\\n\\t}\\n\\n\\t/**\\n\\t * @notice Revokes the vesting schedule for given identifier.\\n\\t * @param vestingScheduleId the vesting schedule identifier\\n\\t */\\n\\tfunction revoke(\\n\\t\\tbytes32 vestingScheduleId\\n\\t) public virtual onlyOwner onlyIfVestingScheduleNotRevoked(vestingScheduleId) {\\n\\t\\tVestingSchedule storage vestingSchedule = vestingSchedules[vestingScheduleId];\\n\\t\\trequire(vestingSchedule.revocable == true, \\\"TokenVesting: vesting is not revocable\\\");\\n/*\\n\\t\\tuint128 vestedAmount = _computeReleasableAmount(vestingSchedule);\\n\\t\\tif (vestedAmount > 0) {\\n\\t\\t\\trelease(vestingScheduleId, vestedAmount);\\n\\t\\t}\\n*/\\n\\t\\tuint256 unreleased = vestingSchedule.amountTotal - vestingSchedule.released;\\n\\t\\tvestingSchedulesTotalAmount = vestingSchedulesTotalAmount - unreleased;\\n\\t\\tvestingSchedule.revoked = true;\\n\\n\\t\\temit Revoked(msg.sender, vestingSchedule.beneficiary, vestingScheduleId);\\n\\t}\\n\\n\\t/**\\n\\t * @notice Release vested amount of tokens.\\n\\t * @param vestingScheduleId the vesting schedule identifier\\n\\t * @param amount the amount to release\\n\\t */\\n\\tfunction release(\\n\\t\\tbytes32 vestingScheduleId,\\n\\t\\tuint128 amount\\n\\t) public virtual nonReentrant onlyIfVestingScheduleNotRevoked(vestingScheduleId) {\\n\\t\\tVestingSchedule storage vestingSchedule = vestingSchedules[vestingScheduleId];\\n\\t\\tbool isBeneficiary = msg.sender == vestingSchedule.beneficiary;\\n\\t\\tbool isOwner = msg.sender == owner();\\n\\t\\trequire(\\n\\t\\t\\tisBeneficiary || isOwner,\\n\\t\\t\\t\\\"TokenVesting: only beneficiary and owner can release vested tokens\\\"\\n\\t\\t);\\n\\t\\tuint256 vestedAmount = _computeReleasableAmount(vestingSchedule);\\n\\t\\trequire(vestedAmount >= amount, \\\"TokenVesting: cannot release tokens, not enough vested tokens\\\");\\n\\t\\tvestingSchedule.released = vestingSchedule.released + amount;\\n\\t\\taddress payable beneficiaryPayable = payable(vestingSchedule.beneficiary);\\n\\t\\tvestingSchedulesTotalAmount = vestingSchedulesTotalAmount - amount;\\n\\t\\tIERC20(_token).safeTransferFrom(_treasury, beneficiaryPayable, amount);\\n\\n\\t\\temit Released(msg.sender, beneficiaryPayable, vestingScheduleId, amount);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Returns the number of vesting schedules managed by this contract.\\n\\t * @return the number of vesting schedules\\n\\t */\\n\\tfunction getVestingSchedulesCount() public view virtual returns (uint256) {\\n\\t\\treturn vestingSchedulesIds.length;\\n\\t}\\n\\n\\t/**\\n\\t * @notice Computes the vested amount of tokens for the given vesting schedule identifier.\\n\\t * @return the vested amount\\n\\t */\\n\\tfunction computeReleasableAmount(\\n\\t\\tbytes32 vestingScheduleId\\n\\t) public view virtual onlyIfVestingScheduleExists(vestingScheduleId) returns (uint256) {\\n\\t\\tVestingSchedule storage vestingSchedule = vestingSchedules[vestingScheduleId];\\n\\t\\treturn _computeReleasableAmount(vestingSchedule);\\n\\t}\\n\\n\\t/**\\n\\t * @notice Returns the vesting schedule information for a given identifier.\\n\\t * @return the vesting schedule structure information\\n\\t */\\n\\tfunction getVestingSchedule(bytes32 vestingScheduleId) public view virtual returns (VestingSchedule memory) {\\n\\t\\treturn vestingSchedules[vestingScheduleId];\\n\\t}\\n\\n\\t/**\\n\\t * @dev Computes the next vesting schedule identifier for a given holder address.\\n\\t */\\n\\tfunction computeNextVestingScheduleIdForHolder(address holder) public view virtual returns (bytes32) {\\n\\t\\treturn computeVestingScheduleIdForAddressAndIndex(holder, holdersVestingCount[holder]);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Returns the last vesting schedule for a given holder address.\\n\\t */\\n\\tfunction getLastVestingScheduleForHolder(address holder) public view virtual returns (VestingSchedule memory) {\\n\\t\\treturn vestingSchedules[computeVestingScheduleIdForAddressAndIndex(holder, holdersVestingCount[holder] - 1)];\\n\\t}\\n\\n\\t/**\\n\\t * @dev Computes the vesting schedule identifier for an address and an index.\\n\\t */\\n\\tfunction computeVestingScheduleIdForAddressAndIndex(\\n\\t\\taddress holder, uint256 index\\n\\t) public pure virtual returns (bytes32) {\\n\\t\\treturn keccak256(abi.encodePacked(holder, index));\\n\\t}\\n\\n\\t/**\\n\\t * @dev Computes the releasable amount of tokens for a vesting schedule.\\n\\t * @return the amount of releasable tokens\\n\\t */\\n\\tfunction _computeReleasableAmount(VestingSchedule memory vestingSchedule) internal view virtual returns (uint128) {\\n\\t\\tuint256 currentTime = getCurrentTime();\\n\\t\\tif (currentTime < vestingSchedule.start || vestingSchedule.revoked == true) {\\n\\t\\t\\treturn 0;\\n\\t\\t} else if (currentTime < vestingSchedule.cliff) {\\n\\t\\t\\treturn vestingSchedule.immediatelyReleasableAmount - vestingSchedule.released;\\n\\t\\t} else if (currentTime >= vestingSchedule.cliff + vestingSchedule.duration) {\\n\\t\\t\\treturn vestingSchedule.amountTotal - vestingSchedule.released;\\n\\t\\t} else {\\n\\t\\t\\tuint256 timeFromCliff = currentTime - vestingSchedule.cliff;\\n\\t\\t\\tuint256 secondsPerSlice = vestingSchedule.slicePeriodSeconds;\\n\\t\\t\\tuint256 vestedSlicePeriods = timeFromCliff / secondsPerSlice;\\n\\t\\t\\tuint256 vestedSeconds = vestedSlicePeriods * secondsPerSlice;\\n\\t\\t\\tuint256 vestedAmount = (vestingSchedule.amountTotal - vestingSchedule.immediatelyReleasableAmount)\\n\\t\\t\\t\\t* vestedSeconds / vestingSchedule.duration\\n\\t\\t\\t\\t+ vestingSchedule.immediatelyReleasableAmount\\n\\t\\t\\t\\t- vestingSchedule.released;\\n\\t\\t\\treturn uint128(vestedAmount);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction getCurrentTime() internal virtual view returns (uint256) {\\n\\t\\treturn block.timestamp;\\n\\t}\\n\\n\\t/**\\n\\t * @inheritdoc UUPSUpgradeable\\n\\t */\\n\\tfunction _authorizeUpgrade(address) internal virtual override onlyOwner {}\\n}\\n\",\"keccak256\":\"0x1fc4cc9229564290f32f2e8b82d293166823fd4787285fc05d0c25ce81a94c2d\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x60a06040523060805234801561001457600080fd5b506080516127096100456000396000818161041a01528181610463015281816104ec015261052c01526127096000f3fe6080604052600436106101355760003560e01c80637e913dc6116100ab578063ea1bb3d51161006f578063ea1bb3d51461034f578063f0f442601461036f578063f2fde38b1461038f578063f51321d7146103af578063f7c469f0146103cf578063f9079b37146103ef57600080fd5b80637e913dc6146102a45780638af104da146102d15780638da5cb5b146102f15780639ef346b41461030f578063b75c7dc61461032f57600080fd5b80634f1ef286116100fd5780634f1ef286146101e55780635a7bb69a146101f857806363bada4f1461022f578063646fd9091461024f578063715018a61461026f5780637151f0d71461028457600080fd5b8063130836171461013a57806321df0da71461015e5780633659cfe6146101905780633b19e84a146101b257806348deb471146101d0575b600080fd5b34801561014657600080fd5b5060fd545b6040519081526020015b60405180910390f35b34801561016a57600080fd5b5060fb546001600160a01b03165b6040516001600160a01b039091168152602001610155565b34801561019c57600080fd5b506101b06101ab366004611fd8565b61040f565b005b3480156101be57600080fd5b5060fc546001600160a01b0316610178565b3480156101dc57600080fd5b5060ff5461014b565b6101b06101f3366004612009565b6104e1565b34801561020457600080fd5b5061014b610213366004611fd8565b6001600160a01b03166000908152610100602052604090205490565b34801561023b57600080fd5b506101b061024a3660046120cb565b61059b565b34801561025b57600080fd5b506101b061026a366004612115565b6106a9565b34801561027b57600080fd5b506101b0610a38565b34801561029057600080fd5b506101b061029f36600461215a565b610a6e565b3480156102b057600080fd5b506102c46102bf366004611fd8565b610ffd565b60405161015591906121f3565b3480156102dd57600080fd5b5061014b6102ec3660046122da565b61110b565b3480156102fd57600080fd5b506097546001600160a01b0316610178565b34801561031b57600080fd5b506102c461032a366004612304565b611152565b34801561033b57600080fd5b506101b061034a366004612304565b61122f565b34801561035b57600080fd5b5061014b61036a366004612304565b6113b9565b34801561037b57600080fd5b506101b061038a366004611fd8565b6114c7565b34801561039b57600080fd5b506101b06103aa366004611fd8565b61154f565b3480156103bb57600080fd5b506102c46103ca3660046122da565b6115e7565b3480156103db57600080fd5b5061014b6103ea366004611fd8565b611603565b3480156103fb57600080fd5b5061014b61040a366004612304565b61162e565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104615760405162461bcd60e51b81526004016104589061231d565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104936116b6565b6001600160a01b0316146104b95760405162461bcd60e51b815260040161045890612369565b6104c2816116e4565b604080516000808252602082019092526104de9183919061170e565b50565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561052a5760405162461bcd60e51b81526004016104589061231d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661055c6116b6565b6001600160a01b0316146105825760405162461bcd60e51b815260040161045890612369565b61058b826116e4565b6105978282600161170e565b5050565b600054610100900460ff166105b65760005460ff16156105ba565b303b155b61061d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610458565b600054610100900460ff1615801561063f576000805461ffff19166101011790555b6001600160a01b03831661065257600080fd5b60fb80546001600160a01b038086166001600160a01b03199283161790925560fc80549285169290911691909117905561068a611859565b610692611890565b80156106a4576000805461ff00191690555b505050565b600260c95414156106fc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610458565b600260c955600082815260fe6020526040902054829060ff16151560011461072357600080fd5b600081815260fe602052604090205462010000900460ff161561074557600080fd5b600083815260fe602052604090208054609754336001600160a01b036301000000909304831681149290911614818061077b5750805b6107f85760405162461bcd60e51b815260206004820152604260248201527f546f6b656e56657374696e673a206f6e6c792062656e6566696369617279206160448201527f6e64206f776e65722063616e2072656c656173652076657374656420746f6b656064820152616e7360f01b608482015260a401610458565b6040805161016081018252845460ff808216151583526101008083048216151560208501526201000083049091161515938301939093526001600160a01b036301000000820416606083015263ffffffff600160b81b820481166080840152600160d81b909104811660a0830152600186015480821660c0840152640100000000810490911660e08301526001600160801b03600160401b9091048116928201929092526002850154808316610120830152600160801b90049091166101408201526000906108c6906118bf565b6001600160801b03169050856001600160801b03168110156109505760405162461bcd60e51b815260206004820152603d60248201527f546f6b656e56657374696e673a2063616e6e6f742072656c6561736520746f6b60448201527f656e732c206e6f7420656e6f7567682076657374656420746f6b656e730000006064820152608401610458565b6002840154610970908790600160801b90046001600160801b03166123cb565b6002850180546001600160801b03928316600160801b02908316179055845460ff546001600160a01b03630100000090920491909116916109b491908916906123f6565b60ff5560fc5460fb546109de916001600160a01b039182169116836001600160801b038b16611a0f565b6040516001600160801b038816815288906001600160a01b0383169033907f2afa253d0464d87b039f71a6964ed5c028a3a3c68048d909fbee4b1610756e799060200160405180910390a45050600160c955505050505050565b6097546001600160a01b03163314610a625760405162461bcd60e51b81526004016104589061240d565b610a6c6000611a6f565b565b6097546001600160a01b03163314610a985760405162461bcd60e51b81526004016104589061240d565b60008563ffffffff1611610af95760405162461bcd60e51b815260206004820152602260248201527f546f6b656e56657374696e673a206475726174696f6e206d757374206265203e604482015261020360f41b6064820152608401610458565b6000826001600160801b031611610b525760405162461bcd60e51b815260206004820181905260248201527f546f6b656e56657374696e673a20616d6f756e74206d757374206265203e20306044820152606401610458565b816001600160801b0316816001600160801b03161115610bda5760405162461bcd60e51b815260206004820152603b60248201527f546f6b656e56657374696e673a20696d6d6564696174656c7952656c6561736160448201527f626c65416d6f756e74206d757374206265203c3d20616d6f756e7400000000006064820152608401610458565b60018463ffffffff161015610c475760405162461bcd60e51b815260206004820152602d60248201527f546f6b656e56657374696e673a20736c696365506572696f645365636f6e647360448201526c206d757374206265203e3d203160981b6064820152608401610458565b604051630f7c469f60e41b81526001600160a01b0389166004820152600090309063f7c469f090602401602060405180830381865afa158015610c8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb29190612442565b90506000610cc0888a61245b565b905060405180610160016040528060011515815260200186151581526020016000151581526020018b6001600160a01b031681526020018263ffffffff1681526020018a63ffffffff1681526020018863ffffffff1681526020018763ffffffff168152602001856001600160801b03168152602001846001600160801b0316815260200160006001600160801b031681525060fe600084815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160000160176101000a81548163ffffffff021916908363ffffffff16021790555060a082015181600001601b6101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160010160006101000a81548163ffffffff021916908363ffffffff16021790555060e08201518160010160046101000a81548163ffffffff021916908363ffffffff1602179055506101008201518160010160086101000a8154816001600160801b0302191690836001600160801b031602179055506101208201518160020160006101000a8154816001600160801b0302191690836001600160801b031602179055506101408201518160020160106101000a8154816001600160801b0302191690836001600160801b03160217905550905050836001600160801b031660ff54610f33919061247a565b60ff5560fd805460018181019092557f9346ac6dd7de6b96975fec380d4d994c4c12e6a8897544f22915316cc6cca280018390556001600160a01b038b166000908152610100602052604090205490610f8d90829061247a565b6001600160a01b038c166000818152610100602090815260408083209490945586825260fe90528290209151859233917f1a9bf504c47e19332c23d4d6cb642dfdc487ab0db791404c129a1f6ec87afc7b91610fe891612492565b60405180910390a45050505050505050505050565b611005611f60565b6001600160a01b0382166000908152610100602052604081205460fe91906110359085906102ec906001906123f6565b81526020808201929092526040908101600020815161016081018352815460ff808216151583526101008083048216151596840196909652620100008204161515938201939093526001600160a01b036301000000840416606082015263ffffffff600160b81b840481166080830152600160d81b909304831660a0820152600182015480841660c0830152640100000000810490931660e08201526001600160801b03600160401b90930483169381019390935260020154808216610120840152600160801b90041661014082015292915050565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b61115a611f60565b50600090815260fe6020908152604091829020825161016081018452815460ff808216151583526101008083048216151595840195909552620100008204161515948201949094526001600160a01b036301000000850416606082015263ffffffff600160b81b850481166080830152600160d81b909404841660a0820152600182015480851660c0830152640100000000810490941660e08201526001600160801b03600160401b90940484169281019290925260020154808316610120830152600160801b900490911661014082015290565b6097546001600160a01b031633146112595760405162461bcd60e51b81526004016104589061240d565b600081815260fe6020526040902054819060ff16151560011461127b57600080fd5b600081815260fe602052604090205462010000900460ff161561129d57600080fd5b600082815260fe60205260409020805460ff6101009091041615156001146113165760405162461bcd60e51b815260206004820152602660248201527f546f6b656e56657374696e673a2076657374696e67206973206e6f74207265766044820152656f6361626c6560d01b6064820152608401610458565b60028101546001820154600091611348916001600160801b03600160801b909204821691600160401b9091041661254a565b6001600160801b031690508060ff5461136191906123f6565b60ff55815462ff00001916620100001780835560405185916001600160a01b036301000000909104169033907feee7de70b290c411a060d8bb9b1cba152a40d74147fef0974d7c2b25ac9b718a90600090a450505050565b600081815260fe6020526040812054829060ff1615156001146113db57600080fd5b600083815260fe6020908152604091829020825161016081018452815460ff808216151583526101008083048216151595840195909552620100008204161515948201949094526001600160a01b036301000000850416606082015263ffffffff600160b81b850481166080830152600160d81b909404841660a0820152600182015480851660c0830152640100000000810490941660e08201526001600160801b03600160401b9094048416928101929092526002810154808416610120840152600160801b90049092166101408201526114b6906118bf565b6001600160801b0316949350505050565b6097546001600160a01b031633146114f15760405162461bcd60e51b81526004016104589061240d565b60fc546040516001600160a01b0380841692169033907f23c12d5579081c5f1077c04a6b1c114d0f3de239e81a436836d30ecb099ffa1390600090a460fc80546001600160a01b0319166001600160a01b0392909216919091179055565b6097546001600160a01b031633146115795760405162461bcd60e51b81526004016104589061240d565b6001600160a01b0381166115de5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610458565b6104de81611a6f565b6115ef611f60565b6115fc61032a848461110b565b9392505050565b6001600160a01b0381166000908152610100602052604081205461162890839061110b565b92915050565b600061163960fd5490565b82106116915760405162461bcd60e51b815260206004820152602160248201527f546f6b656e56657374696e673a20696e646578206f7574206f6620626f756e646044820152607360f81b6064820152608401610458565b60fd82815481106116a4576116a4612572565b90600052602060002001549050919050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6097546001600160a01b031633146104de5760405162461bcd60e51b81526004016104589061240d565b60006117186116b6565b905061172384611ac1565b6000835111806117305750815b156117415761173f8484611b66565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661185257805460ff191660011781556040516001600160a01b03831660248201526117c090869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052611b66565b50805460ff191681556117d16116b6565b6001600160a01b0316826001600160a01b0316146118495760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610458565b61185285611c51565b5050505050565b600054610100900460ff166118805760405162461bcd60e51b815260040161045890612588565b611888611c91565b610a6c611cb8565b600054610100900460ff166118b75760405162461bcd60e51b815260040161045890612588565b610a6c611ce8565b60a0810151600090429063ffffffff168110806118e25750604083015115156001145b156118f05750600092915050565b826080015163ffffffff16811015611918578261014001518361012001516115fc919061254a565b8260c00151836080015161192c919061245b565b63ffffffff16811061194e578261014001518361010001516115fc919061254a565b6000836080015163ffffffff168261196691906123f6565b60e085015190915063ffffffff16600061198082846125d3565b9050600061198e83836125f5565b905060008761014001516001600160801b03168861012001516001600160801b03168960c0015163ffffffff16848b61012001518c61010001516119d2919061254a565b6001600160801b03166119e591906125f5565b6119ef91906125d3565b6119f9919061247a565b611a0391906123f6565b98975050505050505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611a69908590611d16565b50505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b803b611b255760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610458565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b611bc55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610458565b600080846001600160a01b031684604051611be09190612640565b600060405180830381855af49150503d8060008114611c1b576040519150601f19603f3d011682016040523d82523d6000602084013e611c20565b606091505b5091509150611c4882826040518060600160405280602781526020016126ad60279139611de8565b95945050505050565b611c5a81611ac1565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600054610100900460ff16610a6c5760405162461bcd60e51b815260040161045890612588565b600054610100900460ff16611cdf5760405162461bcd60e51b815260040161045890612588565b610a6c33611a6f565b600054610100900460ff16611d0f5760405162461bcd60e51b815260040161045890612588565b600160c955565b6000611d6b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611e219092919063ffffffff16565b8051909150156106a45780806020019051810190611d89919061265c565b6106a45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610458565b60608315611df75750816115fc565b825115611e075782518084602001fd5b8160405162461bcd60e51b81526004016104589190612679565b6060611e308484600085611e38565b949350505050565b606082471015611e995760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610458565b843b611ee75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610458565b600080866001600160a01b03168587604051611f039190612640565b60006040518083038185875af1925050503d8060008114611f40576040519150601f19603f3d011682016040523d82523d6000602084013e611f45565b606091505b5091509150611f55828286611de8565b979650505050505050565b6040805161016081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081019190915290565b80356001600160a01b0381168114611fd357600080fd5b919050565b600060208284031215611fea57600080fd5b6115fc82611fbc565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561201c57600080fd5b61202583611fbc565b9150602083013567ffffffffffffffff8082111561204257600080fd5b818501915085601f83011261205657600080fd5b81358181111561206857612068611ff3565b604051601f8201601f19908116603f0116810190838211818310171561209057612090611ff3565b816040528281528860208487010111156120a957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156120de57600080fd5b6120e783611fbc565b91506120f560208401611fbc565b90509250929050565b80356001600160801b0381168114611fd357600080fd5b6000806040838503121561212857600080fd5b823591506120f5602084016120fe565b803563ffffffff81168114611fd357600080fd5b80151581146104de57600080fd5b600080600080600080600080610100898b03121561217757600080fd5b61218089611fbc565b975061218e60208a01612138565b965061219c60408a01612138565b95506121aa60608a01612138565b94506121b860808a01612138565b935060a08901356121c88161214c565b92506121d660c08a016120fe565b91506121e460e08a016120fe565b90509295985092959890939650565b81511515815261016081016020830151612211602084018215159052565b506040830151612225604084018215159052565b50606083015161224060608401826001600160a01b03169052565b506080830151612258608084018263ffffffff169052565b5060a083015161227060a084018263ffffffff169052565b5060c083015161228860c084018263ffffffff169052565b5060e08301516122a060e084018263ffffffff169052565b50610100838101516001600160801b0390811691840191909152610120808501518216908401526101409384015116929091019190915290565b600080604083850312156122ed57600080fd5b6122f683611fbc565b946020939093013593505050565b60006020828403121561231657600080fd5b5035919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001600160801b038083168185168083038211156123ed576123ed6123b5565b01949350505050565b600082821015612408576124086123b5565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561245457600080fd5b5051919050565b600063ffffffff8083168185168083038211156123ed576123ed6123b5565b6000821982111561248d5761248d6123b5565b500190565b815460ff8116151582526101608201906124b66020840160ff8360081c1615159052565b6124ca6040840160ff8360101c1615159052565b6001600160a01b03601882901c16606084015263ffffffff60b882901c8116608085015260d89190911c811660a0840152600184015480821660c0850152602081901c821660e0850152905060401c6001600160801b039081166101008401526002939093015492831661012083015260809290921c6101409091015290565b60006001600160801b038381169083168181101561256a5761256a6123b5565b039392505050565b634e487b7160e01b600052603260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000826125f057634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561260f5761260f6123b5565b500290565b60005b8381101561262f578181015183820152602001612617565b83811115611a695750506000910152565b60008251612652818460208701612614565b9190910192915050565b60006020828403121561266e57600080fd5b81516115fc8161214c565b6020815260008251806020840152612698816040850160208701612614565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220882f1289e8785b2d730fc4ae0a7867565d4ece850cdd4f40266ab65d57064a4964736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600436106101355760003560e01c80637e913dc6116100ab578063ea1bb3d51161006f578063ea1bb3d51461034f578063f0f442601461036f578063f2fde38b1461038f578063f51321d7146103af578063f7c469f0146103cf578063f9079b37146103ef57600080fd5b80637e913dc6146102a45780638af104da146102d15780638da5cb5b146102f15780639ef346b41461030f578063b75c7dc61461032f57600080fd5b80634f1ef286116100fd5780634f1ef286146101e55780635a7bb69a146101f857806363bada4f1461022f578063646fd9091461024f578063715018a61461026f5780637151f0d71461028457600080fd5b8063130836171461013a57806321df0da71461015e5780633659cfe6146101905780633b19e84a146101b257806348deb471146101d0575b600080fd5b34801561014657600080fd5b5060fd545b6040519081526020015b60405180910390f35b34801561016a57600080fd5b5060fb546001600160a01b03165b6040516001600160a01b039091168152602001610155565b34801561019c57600080fd5b506101b06101ab366004611fd8565b61040f565b005b3480156101be57600080fd5b5060fc546001600160a01b0316610178565b3480156101dc57600080fd5b5060ff5461014b565b6101b06101f3366004612009565b6104e1565b34801561020457600080fd5b5061014b610213366004611fd8565b6001600160a01b03166000908152610100602052604090205490565b34801561023b57600080fd5b506101b061024a3660046120cb565b61059b565b34801561025b57600080fd5b506101b061026a366004612115565b6106a9565b34801561027b57600080fd5b506101b0610a38565b34801561029057600080fd5b506101b061029f36600461215a565b610a6e565b3480156102b057600080fd5b506102c46102bf366004611fd8565b610ffd565b60405161015591906121f3565b3480156102dd57600080fd5b5061014b6102ec3660046122da565b61110b565b3480156102fd57600080fd5b506097546001600160a01b0316610178565b34801561031b57600080fd5b506102c461032a366004612304565b611152565b34801561033b57600080fd5b506101b061034a366004612304565b61122f565b34801561035b57600080fd5b5061014b61036a366004612304565b6113b9565b34801561037b57600080fd5b506101b061038a366004611fd8565b6114c7565b34801561039b57600080fd5b506101b06103aa366004611fd8565b61154f565b3480156103bb57600080fd5b506102c46103ca3660046122da565b6115e7565b3480156103db57600080fd5b5061014b6103ea366004611fd8565b611603565b3480156103fb57600080fd5b5061014b61040a366004612304565b61162e565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104615760405162461bcd60e51b81526004016104589061231d565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104936116b6565b6001600160a01b0316146104b95760405162461bcd60e51b815260040161045890612369565b6104c2816116e4565b604080516000808252602082019092526104de9183919061170e565b50565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561052a5760405162461bcd60e51b81526004016104589061231d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661055c6116b6565b6001600160a01b0316146105825760405162461bcd60e51b815260040161045890612369565b61058b826116e4565b6105978282600161170e565b5050565b600054610100900460ff166105b65760005460ff16156105ba565b303b155b61061d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610458565b600054610100900460ff1615801561063f576000805461ffff19166101011790555b6001600160a01b03831661065257600080fd5b60fb80546001600160a01b038086166001600160a01b03199283161790925560fc80549285169290911691909117905561068a611859565b610692611890565b80156106a4576000805461ff00191690555b505050565b600260c95414156106fc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610458565b600260c955600082815260fe6020526040902054829060ff16151560011461072357600080fd5b600081815260fe602052604090205462010000900460ff161561074557600080fd5b600083815260fe602052604090208054609754336001600160a01b036301000000909304831681149290911614818061077b5750805b6107f85760405162461bcd60e51b815260206004820152604260248201527f546f6b656e56657374696e673a206f6e6c792062656e6566696369617279206160448201527f6e64206f776e65722063616e2072656c656173652076657374656420746f6b656064820152616e7360f01b608482015260a401610458565b6040805161016081018252845460ff808216151583526101008083048216151560208501526201000083049091161515938301939093526001600160a01b036301000000820416606083015263ffffffff600160b81b820481166080840152600160d81b909104811660a0830152600186015480821660c0840152640100000000810490911660e08301526001600160801b03600160401b9091048116928201929092526002850154808316610120830152600160801b90049091166101408201526000906108c6906118bf565b6001600160801b03169050856001600160801b03168110156109505760405162461bcd60e51b815260206004820152603d60248201527f546f6b656e56657374696e673a2063616e6e6f742072656c6561736520746f6b60448201527f656e732c206e6f7420656e6f7567682076657374656420746f6b656e730000006064820152608401610458565b6002840154610970908790600160801b90046001600160801b03166123cb565b6002850180546001600160801b03928316600160801b02908316179055845460ff546001600160a01b03630100000090920491909116916109b491908916906123f6565b60ff5560fc5460fb546109de916001600160a01b039182169116836001600160801b038b16611a0f565b6040516001600160801b038816815288906001600160a01b0383169033907f2afa253d0464d87b039f71a6964ed5c028a3a3c68048d909fbee4b1610756e799060200160405180910390a45050600160c955505050505050565b6097546001600160a01b03163314610a625760405162461bcd60e51b81526004016104589061240d565b610a6c6000611a6f565b565b6097546001600160a01b03163314610a985760405162461bcd60e51b81526004016104589061240d565b60008563ffffffff1611610af95760405162461bcd60e51b815260206004820152602260248201527f546f6b656e56657374696e673a206475726174696f6e206d757374206265203e604482015261020360f41b6064820152608401610458565b6000826001600160801b031611610b525760405162461bcd60e51b815260206004820181905260248201527f546f6b656e56657374696e673a20616d6f756e74206d757374206265203e20306044820152606401610458565b816001600160801b0316816001600160801b03161115610bda5760405162461bcd60e51b815260206004820152603b60248201527f546f6b656e56657374696e673a20696d6d6564696174656c7952656c6561736160448201527f626c65416d6f756e74206d757374206265203c3d20616d6f756e7400000000006064820152608401610458565b60018463ffffffff161015610c475760405162461bcd60e51b815260206004820152602d60248201527f546f6b656e56657374696e673a20736c696365506572696f645365636f6e647360448201526c206d757374206265203e3d203160981b6064820152608401610458565b604051630f7c469f60e41b81526001600160a01b0389166004820152600090309063f7c469f090602401602060405180830381865afa158015610c8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb29190612442565b90506000610cc0888a61245b565b905060405180610160016040528060011515815260200186151581526020016000151581526020018b6001600160a01b031681526020018263ffffffff1681526020018a63ffffffff1681526020018863ffffffff1681526020018763ffffffff168152602001856001600160801b03168152602001846001600160801b0316815260200160006001600160801b031681525060fe600084815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160000160176101000a81548163ffffffff021916908363ffffffff16021790555060a082015181600001601b6101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160010160006101000a81548163ffffffff021916908363ffffffff16021790555060e08201518160010160046101000a81548163ffffffff021916908363ffffffff1602179055506101008201518160010160086101000a8154816001600160801b0302191690836001600160801b031602179055506101208201518160020160006101000a8154816001600160801b0302191690836001600160801b031602179055506101408201518160020160106101000a8154816001600160801b0302191690836001600160801b03160217905550905050836001600160801b031660ff54610f33919061247a565b60ff5560fd805460018181019092557f9346ac6dd7de6b96975fec380d4d994c4c12e6a8897544f22915316cc6cca280018390556001600160a01b038b166000908152610100602052604090205490610f8d90829061247a565b6001600160a01b038c166000818152610100602090815260408083209490945586825260fe90528290209151859233917f1a9bf504c47e19332c23d4d6cb642dfdc487ab0db791404c129a1f6ec87afc7b91610fe891612492565b60405180910390a45050505050505050505050565b611005611f60565b6001600160a01b0382166000908152610100602052604081205460fe91906110359085906102ec906001906123f6565b81526020808201929092526040908101600020815161016081018352815460ff808216151583526101008083048216151596840196909652620100008204161515938201939093526001600160a01b036301000000840416606082015263ffffffff600160b81b840481166080830152600160d81b909304831660a0820152600182015480841660c0830152640100000000810490931660e08201526001600160801b03600160401b90930483169381019390935260020154808216610120840152600160801b90041661014082015292915050565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b61115a611f60565b50600090815260fe6020908152604091829020825161016081018452815460ff808216151583526101008083048216151595840195909552620100008204161515948201949094526001600160a01b036301000000850416606082015263ffffffff600160b81b850481166080830152600160d81b909404841660a0820152600182015480851660c0830152640100000000810490941660e08201526001600160801b03600160401b90940484169281019290925260020154808316610120830152600160801b900490911661014082015290565b6097546001600160a01b031633146112595760405162461bcd60e51b81526004016104589061240d565b600081815260fe6020526040902054819060ff16151560011461127b57600080fd5b600081815260fe602052604090205462010000900460ff161561129d57600080fd5b600082815260fe60205260409020805460ff6101009091041615156001146113165760405162461bcd60e51b815260206004820152602660248201527f546f6b656e56657374696e673a2076657374696e67206973206e6f74207265766044820152656f6361626c6560d01b6064820152608401610458565b60028101546001820154600091611348916001600160801b03600160801b909204821691600160401b9091041661254a565b6001600160801b031690508060ff5461136191906123f6565b60ff55815462ff00001916620100001780835560405185916001600160a01b036301000000909104169033907feee7de70b290c411a060d8bb9b1cba152a40d74147fef0974d7c2b25ac9b718a90600090a450505050565b600081815260fe6020526040812054829060ff1615156001146113db57600080fd5b600083815260fe6020908152604091829020825161016081018452815460ff808216151583526101008083048216151595840195909552620100008204161515948201949094526001600160a01b036301000000850416606082015263ffffffff600160b81b850481166080830152600160d81b909404841660a0820152600182015480851660c0830152640100000000810490941660e08201526001600160801b03600160401b9094048416928101929092526002810154808416610120840152600160801b90049092166101408201526114b6906118bf565b6001600160801b0316949350505050565b6097546001600160a01b031633146114f15760405162461bcd60e51b81526004016104589061240d565b60fc546040516001600160a01b0380841692169033907f23c12d5579081c5f1077c04a6b1c114d0f3de239e81a436836d30ecb099ffa1390600090a460fc80546001600160a01b0319166001600160a01b0392909216919091179055565b6097546001600160a01b031633146115795760405162461bcd60e51b81526004016104589061240d565b6001600160a01b0381166115de5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610458565b6104de81611a6f565b6115ef611f60565b6115fc61032a848461110b565b9392505050565b6001600160a01b0381166000908152610100602052604081205461162890839061110b565b92915050565b600061163960fd5490565b82106116915760405162461bcd60e51b815260206004820152602160248201527f546f6b656e56657374696e673a20696e646578206f7574206f6620626f756e646044820152607360f81b6064820152608401610458565b60fd82815481106116a4576116a4612572565b90600052602060002001549050919050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6097546001600160a01b031633146104de5760405162461bcd60e51b81526004016104589061240d565b60006117186116b6565b905061172384611ac1565b6000835111806117305750815b156117415761173f8484611b66565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661185257805460ff191660011781556040516001600160a01b03831660248201526117c090869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052611b66565b50805460ff191681556117d16116b6565b6001600160a01b0316826001600160a01b0316146118495760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610458565b61185285611c51565b5050505050565b600054610100900460ff166118805760405162461bcd60e51b815260040161045890612588565b611888611c91565b610a6c611cb8565b600054610100900460ff166118b75760405162461bcd60e51b815260040161045890612588565b610a6c611ce8565b60a0810151600090429063ffffffff168110806118e25750604083015115156001145b156118f05750600092915050565b826080015163ffffffff16811015611918578261014001518361012001516115fc919061254a565b8260c00151836080015161192c919061245b565b63ffffffff16811061194e578261014001518361010001516115fc919061254a565b6000836080015163ffffffff168261196691906123f6565b60e085015190915063ffffffff16600061198082846125d3565b9050600061198e83836125f5565b905060008761014001516001600160801b03168861012001516001600160801b03168960c0015163ffffffff16848b61012001518c61010001516119d2919061254a565b6001600160801b03166119e591906125f5565b6119ef91906125d3565b6119f9919061247a565b611a0391906123f6565b98975050505050505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611a69908590611d16565b50505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b803b611b255760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610458565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b611bc55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610458565b600080846001600160a01b031684604051611be09190612640565b600060405180830381855af49150503d8060008114611c1b576040519150601f19603f3d011682016040523d82523d6000602084013e611c20565b606091505b5091509150611c4882826040518060600160405280602781526020016126ad60279139611de8565b95945050505050565b611c5a81611ac1565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600054610100900460ff16610a6c5760405162461bcd60e51b815260040161045890612588565b600054610100900460ff16611cdf5760405162461bcd60e51b815260040161045890612588565b610a6c33611a6f565b600054610100900460ff16611d0f5760405162461bcd60e51b815260040161045890612588565b600160c955565b6000611d6b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611e219092919063ffffffff16565b8051909150156106a45780806020019051810190611d89919061265c565b6106a45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610458565b60608315611df75750816115fc565b825115611e075782518084602001fd5b8160405162461bcd60e51b81526004016104589190612679565b6060611e308484600085611e38565b949350505050565b606082471015611e995760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610458565b843b611ee75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610458565b600080866001600160a01b03168587604051611f039190612640565b60006040518083038185875af1925050503d8060008114611f40576040519150601f19603f3d011682016040523d82523d6000602084013e611f45565b606091505b5091509150611f55828286611de8565b979650505050505050565b6040805161016081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081019190915290565b80356001600160a01b0381168114611fd357600080fd5b919050565b600060208284031215611fea57600080fd5b6115fc82611fbc565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561201c57600080fd5b61202583611fbc565b9150602083013567ffffffffffffffff8082111561204257600080fd5b818501915085601f83011261205657600080fd5b81358181111561206857612068611ff3565b604051601f8201601f19908116603f0116810190838211818310171561209057612090611ff3565b816040528281528860208487010111156120a957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156120de57600080fd5b6120e783611fbc565b91506120f560208401611fbc565b90509250929050565b80356001600160801b0381168114611fd357600080fd5b6000806040838503121561212857600080fd5b823591506120f5602084016120fe565b803563ffffffff81168114611fd357600080fd5b80151581146104de57600080fd5b600080600080600080600080610100898b03121561217757600080fd5b61218089611fbc565b975061218e60208a01612138565b965061219c60408a01612138565b95506121aa60608a01612138565b94506121b860808a01612138565b935060a08901356121c88161214c565b92506121d660c08a016120fe565b91506121e460e08a016120fe565b90509295985092959890939650565b81511515815261016081016020830151612211602084018215159052565b506040830151612225604084018215159052565b50606083015161224060608401826001600160a01b03169052565b506080830151612258608084018263ffffffff169052565b5060a083015161227060a084018263ffffffff169052565b5060c083015161228860c084018263ffffffff169052565b5060e08301516122a060e084018263ffffffff169052565b50610100838101516001600160801b0390811691840191909152610120808501518216908401526101409384015116929091019190915290565b600080604083850312156122ed57600080fd5b6122f683611fbc565b946020939093013593505050565b60006020828403121561231657600080fd5b5035919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001600160801b038083168185168083038211156123ed576123ed6123b5565b01949350505050565b600082821015612408576124086123b5565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561245457600080fd5b5051919050565b600063ffffffff8083168185168083038211156123ed576123ed6123b5565b6000821982111561248d5761248d6123b5565b500190565b815460ff8116151582526101608201906124b66020840160ff8360081c1615159052565b6124ca6040840160ff8360101c1615159052565b6001600160a01b03601882901c16606084015263ffffffff60b882901c8116608085015260d89190911c811660a0840152600184015480821660c0850152602081901c821660e0850152905060401c6001600160801b039081166101008401526002939093015492831661012083015260809290921c6101409091015290565b60006001600160801b038381169083168181101561256a5761256a6123b5565b039392505050565b634e487b7160e01b600052603260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000826125f057634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561260f5761260f6123b5565b500290565b60005b8381101561262f578181015183820152602001612617565b83811115611a695750506000910152565b60008251612652818460208701612614565b9190910192915050565b60006020828403121561266e57600080fd5b81516115fc8161214c565b6020815260008251806020840152612698816040850160208701612614565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220882f1289e8785b2d730fc4ae0a7867565d4ece850cdd4f40266ab65d57064a4964736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "computeNextVestingScheduleIdForHolder(address)": {
        "details": "Computes the next vesting schedule identifier for a given holder address."
      },
      "computeReleasableAmount(bytes32)": {
        "returns": {
          "_0": "the vested amount"
        }
      },
      "computeVestingScheduleIdForAddressAndIndex(address,uint256)": {
        "details": "Computes the vesting schedule identifier for an address and an index."
      },
      "createVestingSchedule(address,uint32,uint32,uint32,uint32,bool,uint128,uint128)": {
        "params": {
          "_amount": "total amount of tokens to be released at the end of the vesting",
          "_beneficiary": "address of the beneficiary to whom vested tokens are transferred",
          "_cliff": "duration in seconds of the cliff in which tokens will begin to vest",
          "_duration": "duration in seconds of the period in which the tokens will vest",
          "_immediatelyReleasableAmount": "total amount of tokens to be released at the beginning of the vesting",
          "_revocable": "whether the vesting is revocable or not",
          "_slicePeriodSeconds": "duration of a slice period for the vesting in seconds",
          "_start": "start time of the vesting period"
        }
      },
      "getLastVestingScheduleForHolder(address)": {
        "details": "Returns the last vesting schedule for a given holder address."
      },
      "getToken()": {
        "details": "Returns the address of the ERC20 token managed by the vesting contract."
      },
      "getTreasury()": {
        "details": "Returns the address of the wallet smart contract uses to fund vesting."
      },
      "getVestingIdAtIndex(uint256)": {
        "details": "Returns the vesting schedule id at the given index.",
        "returns": {
          "_0": "the vesting id"
        }
      },
      "getVestingSchedule(bytes32)": {
        "returns": {
          "_0": "the vesting schedule structure information"
        }
      },
      "getVestingScheduleByAddressAndIndex(address,uint256)": {
        "returns": {
          "_0": "the vesting schedule structure information"
        }
      },
      "getVestingSchedulesCount()": {
        "details": "Returns the number of vesting schedules managed by this contract.",
        "returns": {
          "_0": "the number of vesting schedules"
        }
      },
      "getVestingSchedulesCountByBeneficiary(address)": {
        "details": "Returns the number of vesting schedules associated to a beneficiary.",
        "returns": {
          "_0": "the number of vesting schedules"
        }
      },
      "getVestingSchedulesTotalAmount()": {
        "returns": {
          "_0": "the total amount of vesting schedules"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "postConstruct(address,address)": {
        "details": "UUPS initializer, initializes a vesting contract",
        "params": {
          "token_": "address of the ERC20 token contract, non-zero, immutable",
          "treasury_": "address of the wallet funding vesting contract, mutable"
        }
      },
      "release(bytes32,uint128)": {
        "params": {
          "amount": "the amount to release",
          "vestingScheduleId": "the vesting schedule identifier"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "revoke(bytes32)": {
        "params": {
          "vestingScheduleId": "the vesting schedule identifier"
        }
      },
      "setTreasury(address)": {
        "details": "Updates the wallet address used by the smart contract to fund vesting.",
        "params": {
          "treasury_": "wallet address to set to fund vesting"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "upgradeTo(address)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "upgradeToAndCall(address,bytes)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      }
    },
    "title": "TokenVesting",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "computeReleasableAmount(bytes32)": {
        "notice": "Computes the vested amount of tokens for the given vesting schedule identifier."
      },
      "createVestingSchedule(address,uint32,uint32,uint32,uint32,bool,uint128,uint128)": {
        "notice": "Creates a new vesting schedule for a beneficiary."
      },
      "getVestingSchedule(bytes32)": {
        "notice": "Returns the vesting schedule information for a given identifier."
      },
      "getVestingScheduleByAddressAndIndex(address,uint256)": {
        "notice": "Returns the vesting schedule information for a given holder and index."
      },
      "getVestingSchedulesTotalAmount()": {
        "notice": "Returns the total amount of vesting schedules."
      },
      "release(bytes32,uint128)": {
        "notice": "Release vested amount of tokens."
      },
      "revoke(bytes32)": {
        "notice": "Revokes the vesting schedule for given identifier."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 540,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 543,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 522,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 717,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "__gap",
        "offset": 0,
        "slot": "51",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 1064,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "__gap",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "_owner",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 124,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 732,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "_status",
        "offset": 0,
        "slot": "201",
        "type": "t_uint256"
      },
      {
        "astId": 775,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3846,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "_token",
        "offset": 0,
        "slot": "251",
        "type": "t_address"
      },
      {
        "astId": 3848,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "_treasury",
        "offset": 0,
        "slot": "252",
        "type": "t_address"
      },
      {
        "astId": 3851,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "vestingSchedulesIds",
        "offset": 0,
        "slot": "253",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 3856,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "vestingSchedules",
        "offset": 0,
        "slot": "254",
        "type": "t_mapping(t_bytes32,t_struct(VestingSchedule)3844_storage)"
      },
      {
        "astId": 3858,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "vestingSchedulesTotalAmount",
        "offset": 0,
        "slot": "255",
        "type": "t_uint256"
      },
      {
        "astId": 3862,
        "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
        "label": "holdersVestingCount",
        "offset": 0,
        "slot": "256",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(VestingSchedule)3844_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct TokenVestingV2.VestingSchedule)",
        "numberOfBytes": "32",
        "value": "t_struct(VestingSchedule)3844_storage"
      },
      "t_struct(VestingSchedule)3844_storage": {
        "encoding": "inplace",
        "label": "struct TokenVestingV2.VestingSchedule",
        "members": [
          {
            "astId": 3823,
            "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
            "label": "initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 3825,
            "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
            "label": "revocable",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 3827,
            "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
            "label": "revoked",
            "offset": 2,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 3829,
            "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
            "label": "beneficiary",
            "offset": 3,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3831,
            "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
            "label": "cliff",
            "offset": 23,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 3833,
            "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
            "label": "start",
            "offset": 27,
            "slot": "0",
            "type": "t_uint32"
          },
          {
            "astId": 3835,
            "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
            "label": "duration",
            "offset": 0,
            "slot": "1",
            "type": "t_uint32"
          },
          {
            "astId": 3837,
            "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
            "label": "slicePeriodSeconds",
            "offset": 4,
            "slot": "1",
            "type": "t_uint32"
          },
          {
            "astId": 3839,
            "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
            "label": "amountTotal",
            "offset": 8,
            "slot": "1",
            "type": "t_uint128"
          },
          {
            "astId": 3841,
            "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
            "label": "immediatelyReleasableAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint128"
          },
          {
            "astId": 3843,
            "contract": "contracts/TokenVestingV2.sol:TokenVestingV2",
            "label": "released",
            "offset": 16,
            "slot": "2",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}